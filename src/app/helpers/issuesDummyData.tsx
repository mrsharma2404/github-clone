export const issuesDummyData = [
  {
    url: "https://api.github.com/repos/facebook/react/issues/32019",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32019/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32019/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32019/events",
    html_url: "https://github.com/facebook/react/pull/32019",
    id: 2775747039,
    node_id: "PR_kwDOAJy2Ks6HGFdj",
    number: 32019,
    title: "chore[DevTools/TraceUpdates]: display names by default",
    user: {
      login: "hoxyq",
      id: 28902667,
      node_id: "MDQ6VXNlcjI4OTAyNjY3",
      avatar_url: "https://avatars.githubusercontent.com/u/28902667?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/hoxyq",
      html_url: "https://github.com/hoxyq",
      followers_url: "https://api.github.com/users/hoxyq/followers",
      following_url:
        "https://api.github.com/users/hoxyq/following{/other_user}",
      gists_url: "https://api.github.com/users/hoxyq/gists{/gist_id}",
      starred_url: "https://api.github.com/users/hoxyq/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/hoxyq/subscriptions",
      organizations_url: "https://api.github.com/users/hoxyq/orgs",
      repos_url: "https://api.github.com/users/hoxyq/repos",
      events_url: "https://api.github.com/users/hoxyq/events{/privacy}",
      received_events_url: "https://api.github.com/users/hoxyq/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2025-01-08T15:56:20Z",
    updated_at: "2025-01-08T15:56:32Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/32019",
      html_url: "https://github.com/facebook/react/pull/32019",
      diff_url: "https://github.com/facebook/react/pull/32019.diff",
      patch_url: "https://github.com/facebook/react/pull/32019.patch",
      merged_at: null,
    },
    body: "Feature was added in https://github.com/facebook/react/pull/31577, lets enable it by default. Note: for gradual rollout with React Native, we will continue to emit different event, requires some changes on React Native side to support this.\r\n\r\nI have plans to make this feature to be accessible via browser context menu, which has really limited API. In order to minimize potential divergence, lets make this the default state for the feature.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32019/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32019/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32018",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32018/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32018/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32018/events",
    html_url: "https://github.com/facebook/react/pull/32018",
    id: 2775690499,
    node_id: "PR_kwDOAJy2Ks6HF5Kd",
    number: 32018,
    title: "fix[DevTools/Tree]: only scroll to item when panel is visible",
    user: {
      login: "hoxyq",
      id: 28902667,
      node_id: "MDQ6VXNlcjI4OTAyNjY3",
      avatar_url: "https://avatars.githubusercontent.com/u/28902667?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/hoxyq",
      html_url: "https://github.com/hoxyq",
      followers_url: "https://api.github.com/users/hoxyq/followers",
      following_url:
        "https://api.github.com/users/hoxyq/following{/other_user}",
      gists_url: "https://api.github.com/users/hoxyq/gists{/gist_id}",
      starred_url: "https://api.github.com/users/hoxyq/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/hoxyq/subscriptions",
      organizations_url: "https://api.github.com/users/hoxyq/orgs",
      repos_url: "https://api.github.com/users/hoxyq/repos",
      events_url: "https://api.github.com/users/hoxyq/events{/privacy}",
      received_events_url: "https://api.github.com/users/hoxyq/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2025-01-08T15:31:31Z",
    updated_at: "2025-01-08T16:32:06Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/32018",
      html_url: "https://github.com/facebook/react/pull/32018",
      diff_url: "https://github.com/facebook/react/pull/32018.diff",
      patch_url: "https://github.com/facebook/react/pull/32018.patch",
      merged_at: null,
    },
    body: "Stacked on https://github.com/facebook/react/pull/31968. See commit on top.\r\n\r\nFixes an issue with bank tree view, when we are scrolling to an item while syncing user DOM selection. This should only have an effect on browser extension. Added events with `extension` prefix will only be emitted in browser extension implementation, for other implementations `useExtensionComponentsPanelVisibility` will return constant `true` value.\r\n\r\nBefore:\r\n\r\nhttps://github.com/user-attachments/assets/82667c16-d495-4346-af0a-7ed22ff89cfc\r\n\r\n\r\nAfter:\r\n\r\nhttps://github.com/user-attachments/assets/a5d223fd-0328-44f0-af68-5c3863f1efee\r\n\r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32018/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32018/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32016",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32016/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32016/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32016/events",
    html_url: "https://github.com/facebook/react/issues/32016",
    id: 2775415858,
    node_id: "I_kwDOAJy2Ks6lbXwy",
    number: 32016,
    title: "[React 19] Error when use create-react-app",
    user: {
      login: "manueljesus00",
      id: 36930173,
      node_id: "MDQ6VXNlcjM2OTMwMTcz",
      avatar_url: "https://avatars.githubusercontent.com/u/36930173?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/manueljesus00",
      html_url: "https://github.com/manueljesus00",
      followers_url: "https://api.github.com/users/manueljesus00/followers",
      following_url:
        "https://api.github.com/users/manueljesus00/following{/other_user}",
      gists_url: "https://api.github.com/users/manueljesus00/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/manueljesus00/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/manueljesus00/subscriptions",
      organizations_url: "https://api.github.com/users/manueljesus00/orgs",
      repos_url: "https://api.github.com/users/manueljesus00/repos",
      events_url: "https://api.github.com/users/manueljesus00/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/manueljesus00/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 6688277426,
        node_id: "LA_kwDOAJy2Ks8AAAABjqcDsg",
        url: "https://api.github.com/repos/facebook/react/labels/React%2019",
        name: "React 19",
        color: "263258",
        default: false,
        description: "",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2025-01-08T13:35:48Z",
    updated_at: "2025-01-08T13:40:48Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: "## Summary\r\n\r\nWhen you try to run the command 'npx create-react-app .' and proceed to install the dependencies with npm it returns an error code ERESOLVE Unable to resolve dependency tree as it generates the package.json with React version 19 but @testing-library/react@13.4.0 is compatible exclusively with React 18.\r\n\r\n## Screenshots\r\n![image](https://github.com/user-attachments/assets/84032909-4490-4df7-8c94-3714ff8bc042)\r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32016/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32016/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32015",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32015/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32015/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32015/events",
    html_url: "https://github.com/facebook/react/pull/32015",
    id: 2775242032,
    node_id: "PR_kwDOAJy2Ks6HEWk-",
    number: 32015,
    title:
      "chore[DevTools/Tree]: don't pre-select root element and remove unused code",
    user: {
      login: "hoxyq",
      id: 28902667,
      node_id: "MDQ6VXNlcjI4OTAyNjY3",
      avatar_url: "https://avatars.githubusercontent.com/u/28902667?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/hoxyq",
      html_url: "https://github.com/hoxyq",
      followers_url: "https://api.github.com/users/hoxyq/followers",
      following_url:
        "https://api.github.com/users/hoxyq/following{/other_user}",
      gists_url: "https://api.github.com/users/hoxyq/gists{/gist_id}",
      starred_url: "https://api.github.com/users/hoxyq/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/hoxyq/subscriptions",
      organizations_url: "https://api.github.com/users/hoxyq/orgs",
      repos_url: "https://api.github.com/users/hoxyq/repos",
      events_url: "https://api.github.com/users/hoxyq/events{/privacy}",
      received_events_url: "https://api.github.com/users/hoxyq/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2025-01-08T12:12:03Z",
    updated_at: "2025-01-08T12:12:18Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/32015",
      html_url: "https://github.com/facebook/react/pull/32015",
      diff_url: "https://github.com/facebook/react/pull/32015.diff",
      patch_url: "https://github.com/facebook/react/pull/32015.patch",
      merged_at: null,
    },
    body: "In this PR:\r\n1. Removed unused code in `Tree.js`\r\n2. Removed logic for pre-selecting first element in the tree by default. This is a bit clowny, because it steals focus and resets scroll, when user attempts to expand / collapse some subtree.\r\n3. Updated comments around https://github.com/facebook/react/commit/1c381c588aed1ed6814f1be04fbe42cd069ce174.\r\n\r\nTo expand on 3-rd point, for someone who might be reading this in the future:\r\nWe can't guarantee focus of RDT browser extension panels, because they are hosted in an `iframe`. Attempting to fire any events won't have any result, user action with the corresponding `iframe` is required in order for this `iframe` to obtain focus.\r\n\r\nThe only reason why built-in Elements panel in Chrome works correctly is because it is supported natively somewhere in Chrome / Chrome DevTools. Also, when you select an element on the application page, Chrome will make sure that Elements panel opened, which technically guarantees focus inside DevTools window and Elements panel subview. \r\n\r\nAs of today, we can't navigate user to third-party extensions panels, there is no API for this, hence no ability to guarantee focused RDT panels.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32015/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32015/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32014",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32014/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32014/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32014/events",
    html_url: "https://github.com/facebook/react/issues/32014",
    id: 2774875026,
    node_id: "I_kwDOAJy2Ks6lZTuS",
    number: 32014,
    title: "[Compiler Bug]: Playground doesn't display compiler violations",
    user: {
      login: "MrFlashAccount",
      id: 61194245,
      node_id: "MDQ6VXNlcjYxMTk0MjQ1",
      avatar_url: "https://avatars.githubusercontent.com/u/61194245?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/MrFlashAccount",
      html_url: "https://github.com/MrFlashAccount",
      followers_url: "https://api.github.com/users/MrFlashAccount/followers",
      following_url:
        "https://api.github.com/users/MrFlashAccount/following{/other_user}",
      gists_url: "https://api.github.com/users/MrFlashAccount/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/MrFlashAccount/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/MrFlashAccount/subscriptions",
      organizations_url: "https://api.github.com/users/MrFlashAccount/orgs",
      repos_url: "https://api.github.com/users/MrFlashAccount/repos",
      events_url:
        "https://api.github.com/users/MrFlashAccount/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/MrFlashAccount/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 40929151,
        node_id: "MDU6TGFiZWw0MDkyOTE1MQ==",
        url: "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        name: "Type: Bug",
        color: "b60205",
        default: false,
        description: null,
      },
      {
        id: 155984160,
        node_id: "MDU6TGFiZWwxNTU5ODQxNjA=",
        url: "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        name: "Status: Unconfirmed",
        color: "d4c5f9",
        default: false,
        description: "A potential issue that we haven't yet confirmed as a bug",
      },
      {
        id: 180616330,
        node_id: "MDU6TGFiZWwxODA2MTYzMzA=",
        url: "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        name: "Component: Optimizing Compiler",
        color: "bfdadc",
        default: false,
        description: null,
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2025-01-08T09:48:07Z",
    updated_at: "2025-01-08T09:48:07Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEwBUYCASggGYEC+BVMEGBA5DAgIZx6sA6AO0EIAHjnwMoAnmggCSZclAA2CMAHkqACQgQA1mABqs5ZzyyBAHgAqAPgAUAN07KoCZAWsBKIoIIE4OTBCDhoAXgUKaicXNy9BPwI0GntQgDo4WA4BQgBCMIjnVwQfYET-dMyYbMJC2IRE2gT5Ag48WHlQwSaBEFogA\n\n### Repro steps\n\nCompiler Playground no longer displays violations \n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nlatest\n\n### What version of React Compiler are you using?\n\nlatest",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32014/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32014/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32013",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32013/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32013/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32013/events",
    html_url: "https://github.com/facebook/react/pull/32013",
    id: 2773596995,
    node_id: "PR_kwDOAJy2Ks6G-owK",
    number: 32013,
    title: "[compiler] ReactiveIR: add Let/Assign/Branch/Join nodes",
    user: {
      login: "josephsavona",
      id: 6425824,
      node_id: "MDQ6VXNlcjY0MjU4MjQ=",
      avatar_url: "https://avatars.githubusercontent.com/u/6425824?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/josephsavona",
      html_url: "https://github.com/josephsavona",
      followers_url: "https://api.github.com/users/josephsavona/followers",
      following_url:
        "https://api.github.com/users/josephsavona/following{/other_user}",
      gists_url: "https://api.github.com/users/josephsavona/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/josephsavona/subscriptions",
      organizations_url: "https://api.github.com/users/josephsavona/orgs",
      repos_url: "https://api.github.com/users/josephsavona/repos",
      events_url: "https://api.github.com/users/josephsavona/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/josephsavona/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2025-01-07T19:39:05Z",
    updated_at: "2025-01-08T05:33:05Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/32013",
      html_url: "https://github.com/facebook/react/pull/32013",
      diff_url: "https://github.com/facebook/react/pull/32013.diff",
      patch_url: "https://github.com/facebook/react/pull/32013.patch",
      merged_at: null,
    },
    body: "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\r\n* __->__ #32013\r\n* #31974\r\n\r\nFurther exploration of the new ReactiveIR sea-of-nodes approach, adding Let/Assign/Branch/Join nodes. See the doc for more about how these work.\r\n\r\nNotable things in the implementation is that this ensures that reads and writes of variables are always ordered correctly:\r\n* Reads after writes: reads have a control dependency that ensures they come after the write they should be reading\r\n* Writes after reads: subsequent writes come after any reads of previous writes, or if no reads, after the previous write\r\n\r\nIn both cases, the ordering only applies within consecutive control flow. The first read or write of a variable within a given branch of control flow will only take a dependency on the block's entry node (the default control).\r\n\r\nNot implemented yet is the logic to ensure that if there is a read within a branch, that we order the branch itself after the value that would be read (and similarly for writes), and also to construct phis for conditionally reassigned values and set the Join as the last write.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32013/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32013/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32012",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32012/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32012/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32012/events",
    html_url: "https://github.com/facebook/react/pull/32012",
    id: 2773543316,
    node_id: "PR_kwDOAJy2Ks6G-dQQ",
    number: 32012,
    title: "[compiler] Playground qol: shared directives with tests",
    user: {
      login: "mofeiZ",
      id: 34200447,
      node_id: "MDQ6VXNlcjM0MjAwNDQ3",
      avatar_url: "https://avatars.githubusercontent.com/u/34200447?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/mofeiZ",
      html_url: "https://github.com/mofeiZ",
      followers_url: "https://api.github.com/users/mofeiZ/followers",
      following_url:
        "https://api.github.com/users/mofeiZ/following{/other_user}",
      gists_url: "https://api.github.com/users/mofeiZ/gists{/gist_id}",
      starred_url: "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/mofeiZ/subscriptions",
      organizations_url: "https://api.github.com/users/mofeiZ/orgs",
      repos_url: "https://api.github.com/users/mofeiZ/repos",
      events_url: "https://api.github.com/users/mofeiZ/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/mofeiZ/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2025-01-07T19:06:00Z",
    updated_at: "2025-01-07T19:39:47Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/32012",
      html_url: "https://github.com/facebook/react/pull/32012",
      diff_url: "https://github.com/facebook/react/pull/32012.diff",
      patch_url: "https://github.com/facebook/react/pull/32012.patch",
      merged_at: null,
    },
    body: "\n- Adds @compilationMode(all|infer|syntax|annotation) and @panicMode(none) directives. This is now shared with our test infra\n- Playground still defaults to `infer` mode while tests default to `all` mode\n- See added fixture tests\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32012/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32012/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32011",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32011/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32011/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32011/events",
    html_url: "https://github.com/facebook/react/issues/32011",
    id: 2773534849,
    node_id: "I_kwDOAJy2Ks6lUMiB",
    number: 32011,
    title:
      "[Compiler Bug]: Upgrading to react compiler runtime 19.0.0-beta-63e3235-20250105 breaks app built with Vite + React Route v7",
    user: {
      login: "rishitells",
      id: 20553866,
      node_id: "MDQ6VXNlcjIwNTUzODY2",
      avatar_url: "https://avatars.githubusercontent.com/u/20553866?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/rishitells",
      html_url: "https://github.com/rishitells",
      followers_url: "https://api.github.com/users/rishitells/followers",
      following_url:
        "https://api.github.com/users/rishitells/following{/other_user}",
      gists_url: "https://api.github.com/users/rishitells/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/rishitells/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/rishitells/subscriptions",
      organizations_url: "https://api.github.com/users/rishitells/orgs",
      repos_url: "https://api.github.com/users/rishitells/repos",
      events_url: "https://api.github.com/users/rishitells/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/rishitells/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 40929151,
        node_id: "MDU6TGFiZWw0MDkyOTE1MQ==",
        url: "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        name: "Type: Bug",
        color: "b60205",
        default: false,
        description: null,
      },
      {
        id: 155984160,
        node_id: "MDU6TGFiZWwxNTU5ODQxNjA=",
        url: "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        name: "Status: Unconfirmed",
        color: "d4c5f9",
        default: false,
        description: "A potential issue that we haven't yet confirmed as a bug",
      },
      {
        id: 180616330,
        node_id: "MDU6TGFiZWwxODA2MTYzMzA=",
        url: "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        name: "Component: Optimizing Compiler",
        color: "bfdadc",
        default: false,
        description: null,
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 3,
    created_at: "2025-01-07T19:00:30Z",
    updated_at: "2025-01-08T05:43:41Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: '### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://github.com/rishitells/react-router-v7-react-compiler\r\n\r\n### Repro steps\r\n\r\nReact compiler setup breaks after upgrading the compiler related dependencies to 19.0.0-beta-63e3235-20250105.\r\n\r\nStack trace:\r\n```\r\n [vite] Error when evaluating SSR module /app/root.tsx: failed to import "react-compiler-runtime"\r\n|- /Users/rishabhsharma/Projects/react-router-v7/node_modules/.pnpm/react-compiler-runtime@19.0.0-beta-63e3235-20250105_react@19.0.0/node_modules/react-compiler-runtime/dist/index.js:17\r\nimport * as React from "react";\r\n^^^^^^\r\n\r\nSyntaxError: Cannot use import statement outside a module\r\n    at wrapSafe (node:internal/modules/cjs/loader:1378:20)\r\n    at Module._compile (node:internal/modules/cjs/loader:1428:41)\r\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1548:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\r\n    at Function.Module._load (node:internal/modules/cjs/loader:1104:12)\r\n    at cjsLoader (node:internal/modules/esm/translators:346:17)\r\n    at ModuleWrap.<anonymous> (node:internal/modules/esm/translators:286:7)\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:234:25)\r\n    at ModuleLoader.import (node:internal/modules/esm/loader:473:24)\r\n    at nodeImport (file:///Users/rishabhsharma/Projects/react-router-v7/node_modules/.pnpm/vite@5.4.11_@types+node@20.17.12/node_modules/vite/dist/node/chunks/dep-CB_7IfJ-.js:53056:15)\r\n    at ssrImport (file:///Users/rishabhsharma/Projects/react-router-v7/node_modules/.pnpm/vite@5.4.11_@types+node@20.17.12/node_modules/vite/dist/node/chunks/dep-CB_7IfJ-.js:52914:16)\r\n    at eval (/Users/rishabhsharma/Projects/react-router-v7/app/root.tsx:5:31)\r\n    at instantiateModule (file:///Users/rishabhsharma/Projects/react-router-v7/node_modules/.pnpm/vite@5.4.11_@types+node@20.17.12/node_modules/vite/dist/node/chunks/dep-CB_7IfJ-.js:52972:5)\r\n\r\n```\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19.0.0\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-63e3235-20250105',
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32011/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32011/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32002",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32002/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32002/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32002/events",
    html_url: "https://github.com/facebook/react/pull/32002",
    id: 2771880394,
    node_id: "PR_kwDOAJy2Ks6G4yZb",
    number: 32002,
    title:
      "[Fiber] Suspend the commit while we wait for the previous View Transition to finish",
    user: {
      login: "sebmarkbage",
      id: 63648,
      node_id: "MDQ6VXNlcjYzNjQ4",
      avatar_url: "https://avatars.githubusercontent.com/u/63648?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/sebmarkbage",
      html_url: "https://github.com/sebmarkbage",
      followers_url: "https://api.github.com/users/sebmarkbage/followers",
      following_url:
        "https://api.github.com/users/sebmarkbage/following{/other_user}",
      gists_url: "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/sebmarkbage/subscriptions",
      organizations_url: "https://api.github.com/users/sebmarkbage/orgs",
      repos_url: "https://api.github.com/users/sebmarkbage/repos",
      events_url: "https://api.github.com/users/sebmarkbage/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/sebmarkbage/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 2,
    created_at: "2025-01-07T04:38:15Z",
    updated_at: "2025-01-07T23:13:55Z",
    closed_at: null,
    author_association: "COLLABORATOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/32002",
      html_url: "https://github.com/facebook/react/pull/32002",
      diff_url: "https://github.com/facebook/react/pull/32002.diff",
      patch_url: "https://github.com/facebook/react/pull/32002.patch",
      merged_at: null,
    },
    body: "Stacked on #31975.\r\n\r\nView Transitions cannot handle interruptions in that if you start a new one before the previous one has finished, it just stops and then restarts. It doesn't seamlessly transition into the new transition.\r\n\r\nThis is generally considered a bad thing but I actually think it's quite good for fire-and-forget animations (gestures is another story). There are too many examples of bad animations in fast interactions because the scenario wasn't predicted. Like overlapping toasts or stacked layers that look bad. The only case interrupts tend to work well is when you do a strict reversal of an animation like returning to the page you just left or exiting a modal just being opened. However, we're limited by the platform even in that regard.\r\n\r\nI think one reason interruptions have traditionally been seen as good is because it's hard if you have a synchronous framework to not interrupt since your application state has already moved on. We don't have that limitation since we can suspend commits. We can do all the work to prepare for the next commit by rendering while the animation is going but then delay the commit until the previous one finishes.\r\n\r\nAnother technical limitation earlier animation libraries suffered from is only have the option to either interrupt or sequence animations since it's modeling just one change set. Like showing one toast at a time. That's bad. We don't have that limitation because we can interrupt a previously suspended commit and start working on a new one instead. That's what we do for suspended transitions in general. The net effect is that we batch the commits.\r\n\r\nTherefore if you get multiple toasts flying in fast, they can animate as a batch in together all at once instead of overlapping slightly or being staggered. Interruptions (often) bad. Staggered animations bad. Batched animations good.\r\n\r\nThis PR stashes the currently active View Transition with an expando on the container that's animating (currently always document). This is similar to what we do with event handlers etc. We reason we do this with an expando is that if you have multiple Reacts on the same page they need to wait for each other. However, one of those might also be the SSR runtime. So this lets us wait for the SSR runtime's animations to finish before starting client ones. This could really be a more generic name since this should ideally be shared across frameworks. It's kind of strange that this property doesn't already exist in the DOM given that there can only be one. It would be useful to be able to coordinate this across libraries.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32002/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32002/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/32001",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/32001/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/32001/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/32001/events",
    html_url: "https://github.com/facebook/react/pull/32001",
    id: 2771644625,
    node_id: "PR_kwDOAJy2Ks6G4A6U",
    number: 32001,
    title: "Use valid CSS selectors in useId format",
    user: {
      login: "sebmarkbage",
      id: 63648,
      node_id: "MDQ6VXNlcjYzNjQ4",
      avatar_url: "https://avatars.githubusercontent.com/u/63648?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/sebmarkbage",
      html_url: "https://github.com/sebmarkbage",
      followers_url: "https://api.github.com/users/sebmarkbage/followers",
      following_url:
        "https://api.github.com/users/sebmarkbage/following{/other_user}",
      gists_url: "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/sebmarkbage/subscriptions",
      organizations_url: "https://api.github.com/users/sebmarkbage/orgs",
      repos_url: "https://api.github.com/users/sebmarkbage/repos",
      events_url: "https://api.github.com/users/sebmarkbage/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/sebmarkbage/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 6,
    created_at: "2025-01-07T00:00:17Z",
    updated_at: "2025-01-07T10:00:35Z",
    closed_at: null,
    author_association: "COLLABORATOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/32001",
      html_url: "https://github.com/facebook/react/pull/32001",
      diff_url: "https://github.com/facebook/react/pull/32001.diff",
      patch_url: "https://github.com/facebook/react/pull/32001.patch",
      merged_at: null,
    },
    body: "For the `useId` algorithm we used colon `:` before and after. https://github.com/facebook/react/pull/23360\r\n\r\nThis avoids collisions in general by using an unusual characters. It also avoids collisions when concatenated with some other ID. Unfortunately, `:` is not a valid character in `view-transition-name`.\r\n\r\nThis PR swaps the format from:\r\n\r\n```\r\n:r123:\r\n```\r\n\r\nTo the unicode:\r\n\r\n```\r\n«r123»\r\n```\r\n\r\nWhich is valid CSS selectors. This also allows them being used for `querySelector()` which we didn't really find a legit use for but seems ok-ish.\r\n\r\nThat way you can get a view-transition-name that you can manually reference. E.g. to generate styles:\r\n\r\n```js\r\nconst id = useId();\r\nreturn <>\r\n  <style>{`\r\n    ::view-transition-group(${id}) { ... }\r\n    ::view-transition-old(${id}) { ... }\r\n    ::view-transition-new(${id}) { ... }\r\n  `}</style>\r\n  <ViewTransition name={id}>...</ViewTransition>\r\n</>;\r\n```",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/32001/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/32001/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31999",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31999/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31999/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31999/events",
    html_url: "https://github.com/facebook/react/pull/31999",
    id: 2771432975,
    node_id: "PR_kwDOAJy2Ks6G3S5D",
    number: 31999,
    title:
      "[Fiber] Use className on <ViewTransition> to assign view-transition-class",
    user: {
      login: "sebmarkbage",
      id: 63648,
      node_id: "MDQ6VXNlcjYzNjQ4",
      avatar_url: "https://avatars.githubusercontent.com/u/63648?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/sebmarkbage",
      html_url: "https://github.com/sebmarkbage",
      followers_url: "https://api.github.com/users/sebmarkbage/followers",
      following_url:
        "https://api.github.com/users/sebmarkbage/following{/other_user}",
      gists_url: "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/sebmarkbage/subscriptions",
      organizations_url: "https://api.github.com/users/sebmarkbage/orgs",
      repos_url: "https://api.github.com/users/sebmarkbage/repos",
      events_url: "https://api.github.com/users/sebmarkbage/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/sebmarkbage/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 2,
    created_at: "2025-01-06T20:56:45Z",
    updated_at: "2025-01-08T17:20:06Z",
    closed_at: null,
    author_association: "COLLABORATOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31999",
      html_url: "https://github.com/facebook/react/pull/31999",
      diff_url: "https://github.com/facebook/react/pull/31999.diff",
      patch_url: "https://github.com/facebook/react/pull/31999.patch",
      merged_at: null,
    },
    body: "Stacked on #31975.\r\n\r\nThis is the primary way we recommend styling your View Transitions since it allows for reusable styling such as a CSS library specializing in View Transitions in a way that's composable and without naming conflicts. E.g.\r\n\r\n```js\r\n<ViewTransition className=\"enter-slide-in exit-fade-out update-cross-fade\">\r\n```\r\n\r\nThis doesn't change the HTML `class` attribute. It's not a CSS class. Instead it assign the `view-transition-class` style prop of the underlying DOM node while it's transitioning.\r\n\r\nYou can also just use `<div style={{viewTransitionClass: ...}}>` on the DOM node but it's convenient to control the Transition completely from the outside and conceptually we're transitioning the whole fragment. You can even make Transition components that just wraps existing components. `<RevealTransition><Component /></RevealTransition>` this way.\r\n\r\nSince you can also have multiple wrappers for different circumstances it allows React's heuristics to use different classes for different scenarios. We'll likely add more options like configuring different classes for different `types` or scenarios that can't be described by CSS alone.\r\n\r\n## CSS Modules\r\n\r\n```js\r\nimport transitions from './transitions.module.css';\r\n\r\n<ViewTransition className={transitions.bounceIn}>...</ViewTransition>\r\n```\r\n\r\nCSS Modules works well with this strategy because you can have globally unique namespaces and define your transitions in the CSS modules as a library that you can import. [As seen in the fixture here.](https://github.com/facebook/react/commit/8b91b37bb8b4add5f3f8be5ef8f49bb23966b13b#diff-b4d9854171ffdac4d2c01be92a5eff4f8e9e761e6af953094f99ca243b054a85R11)\r\n\r\nI did notice an unfortunate bug in how CSS Modules (at least in Webpack) generates class names. Sometimes the `+` character is used in the hash of the class name which is not valid for `view-transition-class` and so it breaks. I had to rename my class names until the hash yielded something different to work around it. Ideally that bug gets fixed soon.\r\n\r\n## className, rly?\r\n\r\n`className` isn't exactly the most loved property name, however, I'm using `className` here too for consistency. Even though in this case there's no direct equivalent DOM property name. The CSS property is named `viewTransitionClass`, but the \"viewTransition\" prefix is implied by the Component it is on in this case. For most people the fact that this is actually a different namespace than other CSS classes doesn't matter. You'll most just use a CSS library anyway and conceptually you're just assigning classes the same way as `className` on a DOM node.\r\n\r\nBut if we ever rename the `class` prop then we can do that for this one as well.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31999/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31999/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31996",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31996/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31996/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31996/events",
    html_url: "https://github.com/facebook/react/pull/31996",
    id: 2771189700,
    node_id: "PR_kwDOAJy2Ks6G2dmk",
    number: 31996,
    title: "[Fiber] Support only View Transitions v2",
    user: {
      login: "sebmarkbage",
      id: 63648,
      node_id: "MDQ6VXNlcjYzNjQ4",
      avatar_url: "https://avatars.githubusercontent.com/u/63648?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/sebmarkbage",
      html_url: "https://github.com/sebmarkbage",
      followers_url: "https://api.github.com/users/sebmarkbage/followers",
      following_url:
        "https://api.github.com/users/sebmarkbage/following{/other_user}",
      gists_url: "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/sebmarkbage/subscriptions",
      organizations_url: "https://api.github.com/users/sebmarkbage/orgs",
      repos_url: "https://api.github.com/users/sebmarkbage/repos",
      events_url: "https://api.github.com/users/sebmarkbage/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/sebmarkbage/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 2,
    created_at: "2025-01-06T18:16:05Z",
    updated_at: "2025-01-08T17:16:53Z",
    closed_at: null,
    author_association: "COLLABORATOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31996",
      html_url: "https://github.com/facebook/react/pull/31996",
      diff_url: "https://github.com/facebook/react/pull/31996.diff",
      patch_url: "https://github.com/facebook/react/pull/31996.patch",
      merged_at: null,
    },
    body: "Stacked on #31975.\r\n\r\nWe're going to recommend that the primary way you style a View Transition is using a View Transition Class (and/or Type). These are only available in the View Transitions v2 spec. When they're not available it's better to fallback to just not animating instead of animating with the wrong styling rules applied.\r\n\r\nThis is already widely supported in Chrome and Safari 18.2. Safari 18.2 usage is still somewhat low but it's rolling out quickly as we speak.\r\n\r\nA way to detect this is by just passing the object form to `startViewTransition` which throws if it's an earlier version. The object form is required for `types` but luckily classes rolled out at the same time. Therefore we're only indirectly detecting class support.\r\n\r\nThis means that in practice Safari 18.0 and 18.1 won't animate. We could try to only apply the feature detection if you're actually using classes or types, but that would create an unfortunate ecosystem burden to try to support names. It also leads to flaky effects when only some animations work. Better to just disable them all.\r\n\r\nFirefox has yet to ship anything. We'll have to look out for how the feature detection happens there and if they roll things out in different order but if you ship late, you deal with web compat as the ball lies.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31996/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31996/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31981",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31981/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31981/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31981/events",
    html_url: "https://github.com/facebook/react/issues/31981",
    id: 2769270036,
    node_id: "I_kwDOAJy2Ks6lD7UU",
    number: 31981,
    title: "[React 19] Reintroduce debugSource in some kind of opt-in way",
    user: {
      login: "Artur-",
      id: 260340,
      node_id: "MDQ6VXNlcjI2MDM0MA==",
      avatar_url: "https://avatars.githubusercontent.com/u/260340?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/Artur-",
      html_url: "https://github.com/Artur-",
      followers_url: "https://api.github.com/users/Artur-/followers",
      following_url:
        "https://api.github.com/users/Artur-/following{/other_user}",
      gists_url: "https://api.github.com/users/Artur-/gists{/gist_id}",
      starred_url: "https://api.github.com/users/Artur-/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/Artur-/subscriptions",
      organizations_url: "https://api.github.com/users/Artur-/orgs",
      repos_url: "https://api.github.com/users/Artur-/repos",
      events_url: "https://api.github.com/users/Artur-/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/Artur-/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 6688277426,
        node_id: "LA_kwDOAJy2Ks8AAAABjqcDsg",
        url: "https://api.github.com/repos/facebook/react/labels/React%2019",
        name: "React 19",
        color: "263258",
        default: false,
        description: "",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2025-01-05T13:14:48Z",
    updated_at: "2025-01-05T13:14:48Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: "## Summary\r\n\r\n`__debugSource` was removed in #28265 to solve problems that do not apply to us and without including any 1:1 replacement that we could make work for our case. We are currently looking for ways to re-implement it for React 19 but all approaches seem quite hacky or fragile without any additional support from React.\r\n\r\nWe use `__debugSource` to create a mapping between a DOM element (fiber node in practice) to the source location where the JSX element was created. We use this information to be able to implement an in-browser, in-app editor for JSX, e.g. we can find a fiber node from a DOM element and then find the exact source location where the element was created, parse the file and modify the JSX node. Naturally, this is only ever available in dev mode.\r\n\r\nWe control the main configuration for how TSX/JSX is transformed into JS so getting accurate source information has never been a problem. However, all approaches using stack traces and similar will not work as they only contain the line number and not exact location in the source file. Take for instance the JSX code\r\n```jsx\r\nfunction MyView() {\r\n  return <><span>Hello</span><span>Hello</span><span>Hello</span></>;\r\n}\r\n```\r\nand it is quite difficult to know which element a `<span>` from the DOM maps to, even if the line number is available.\r\n\r\nWe have prototyped some workarounds like using our own jsx dev transform and placing the source info manually somewhere but these approaches also have issues:\r\n1. If placing on the `ReactElement`, we have to abuse an existing property as only those are copied to the fiber nodes when rendering. The closest one would be `_debugInfo` but that will probably be overwritten in some cases\r\n2. Placing the mapping in a global variable would work but as only the `ReactElement` instance is available at that point, and that instance is not referenced from a fiber node, there does not seem to be anything sensible available to use as a key for the map\r\n\r\nWe could rewrite part of the React code but that would seem even more fragile.\r\n\r\nGood ideas are welcome",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31981/reactions",
      total_count: 5,
      "+1": 5,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31981/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31978",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31978/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31978/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31978/events",
    html_url: "https://github.com/facebook/react/issues/31978",
    id: 2769181514,
    node_id: "I_kwDOAJy2Ks6lDltK",
    number: 31978,
    title:
      "[React 19]Calling setState inside useEffect causes 'Maximum update depth exceeded'",
    user: {
      login: "TangJian-Eddie",
      id: 60143213,
      node_id: "MDQ6VXNlcjYwMTQzMjEz",
      avatar_url: "https://avatars.githubusercontent.com/u/60143213?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/TangJian-Eddie",
      html_url: "https://github.com/TangJian-Eddie",
      followers_url: "https://api.github.com/users/TangJian-Eddie/followers",
      following_url:
        "https://api.github.com/users/TangJian-Eddie/following{/other_user}",
      gists_url: "https://api.github.com/users/TangJian-Eddie/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/TangJian-Eddie/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/TangJian-Eddie/subscriptions",
      organizations_url: "https://api.github.com/users/TangJian-Eddie/orgs",
      repos_url: "https://api.github.com/users/TangJian-Eddie/repos",
      events_url:
        "https://api.github.com/users/TangJian-Eddie/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/TangJian-Eddie/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 6688277426,
        node_id: "LA_kwDOAJy2Ks8AAAABjqcDsg",
        url: "https://api.github.com/repos/facebook/react/labels/React%2019",
        name: "React 19",
        color: "263258",
        default: false,
        description: "",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2025-01-05T09:06:06Z",
    updated_at: "2025-01-05T09:06:06Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: "## Summary\r\n\r\nI noticed that while maximum update depth exceeded, Class Components will throw an Error, but Function Components only console.error only in the development environment. I’d like to understand the reason for this behavior and whether it’s possible for Function Components to also throw an Error. Our project aims to catch such errors promptly.\r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31978/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31978/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31977",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31977/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31977/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31977/events",
    html_url: "https://github.com/facebook/react/issues/31977",
    id: 2768908931,
    node_id: "I_kwDOAJy2Ks6lCjKD",
    number: 31977,
    title:
      "[DevTools Bug]: React DevTools Profiler freezes after recording multiple events",
    user: {
      login: "MariniGraphicDesigner",
      id: 23349314,
      node_id: "MDQ6VXNlcjIzMzQ5MzE0",
      avatar_url: "https://avatars.githubusercontent.com/u/23349314?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/MariniGraphicDesigner",
      html_url: "https://github.com/MariniGraphicDesigner",
      followers_url:
        "https://api.github.com/users/MariniGraphicDesigner/followers",
      following_url:
        "https://api.github.com/users/MariniGraphicDesigner/following{/other_user}",
      gists_url:
        "https://api.github.com/users/MariniGraphicDesigner/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/MariniGraphicDesigner/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/MariniGraphicDesigner/subscriptions",
      organizations_url:
        "https://api.github.com/users/MariniGraphicDesigner/orgs",
      repos_url: "https://api.github.com/users/MariniGraphicDesigner/repos",
      events_url:
        "https://api.github.com/users/MariniGraphicDesigner/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/MariniGraphicDesigner/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 40929151,
        node_id: "MDU6TGFiZWw0MDkyOTE1MQ==",
        url: "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        name: "Type: Bug",
        color: "b60205",
        default: false,
        description: null,
      },
      {
        id: 155984160,
        node_id: "MDU6TGFiZWwxNTU5ODQxNjA=",
        url: "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        name: "Status: Unconfirmed",
        color: "d4c5f9",
        default: false,
        description: "A potential issue that we haven't yet confirmed as a bug",
      },
      {
        id: 710573595,
        node_id: "MDU6TGFiZWw3MTA1NzM1OTU=",
        url: "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
        name: "Component: Developer Tools",
        color: "fbca04",
        default: false,
        description: null,
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2025-01-04T16:15:59Z",
    updated_at: "2025-01-07T07:58:12Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: '### Website or app\n\nlocalhost\n\n### Repro steps\n\nI\'m experiencing an issue with React DevTools while debugging a project locally. Here are the steps to reproduce the issue:\r\n\r\n1. Open React DevTools and navigate to the Profiler tab.\r\n2. Start a recording by clicking on "Start Profiling," then stop it by clicking on "Stop Profiling."\r\n3. View the recording results without any issues.\r\n4. Attempt to start a new recording by clicking on "Start Profiling" again.\r\n5. After a few moments, the Profiler becomes extremely slow or completely unresponsive.\r\n6. At this point, I am unable to make additional recordings or refresh the Profiler data.\r\n\r\nI hope these details help in identifying and resolving the issue. Let me know if you need further information or clarification.\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_',
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31977/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31977/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31974",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31974/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31974/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31974/events",
    html_url: "https://github.com/facebook/react/pull/31974",
    id: 2768335778,
    node_id: "PR_kwDOAJy2Ks6Gs9ZG",
    number: 31974,
    title: "[compiler] Early sketch of ReactiveIR",
    user: {
      login: "josephsavona",
      id: 6425824,
      node_id: "MDQ6VXNlcjY0MjU4MjQ=",
      avatar_url: "https://avatars.githubusercontent.com/u/6425824?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/josephsavona",
      html_url: "https://github.com/josephsavona",
      followers_url: "https://api.github.com/users/josephsavona/followers",
      following_url:
        "https://api.github.com/users/josephsavona/following{/other_user}",
      gists_url: "https://api.github.com/users/josephsavona/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/josephsavona/subscriptions",
      organizations_url: "https://api.github.com/users/josephsavona/orgs",
      repos_url: "https://api.github.com/users/josephsavona/repos",
      events_url: "https://api.github.com/users/josephsavona/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/josephsavona/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2025-01-04T00:58:04Z",
    updated_at: "2025-01-08T05:27:25Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31974",
      html_url: "https://github.com/facebook/react/pull/31974",
      diff_url: "https://github.com/facebook/react/pull/31974.diff",
      patch_url: "https://github.com/facebook/react/pull/31974.patch",
      merged_at: null,
    },
    body: "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #32013\n* __->__ #31974\n\r\nEarly sketch of a new representation for the middle-phase of the compiler. This is a sea-of-nodes approach, representing instructions and terminals as nodes with direct and control dependencies.\r\n\r\nSomething like this:\r\n\r\n```js\r\nlet array = [];\r\nif (cond) {\r\n  array.push(value);\r\n}\r\nreturn array;\r\n```\r\n\r\nWould correspond roughly to a graph as follows. Note that the actual representation uses `Instruction` as-is, and maps dependencies into local `Place`s, but for ease of reading i've mapped operands as the node they come from (n0 etc):\r\n\r\n```\r\n// instructions before the 'if': note that these are dangling \r\n// (no nodes depends on them) but they would get ordered as control deps of n7, the if node\r\nn0 = ArrayExpression []\r\nn1 = StoreLocal 'array' = n0\r\n\r\n// nodes from the consequent\r\nn2 = LoadLocal 'array'\r\nn3 = PropertyLoad n2 . 'push'\r\nn4 = LoadLocal 'value'\r\nn5 = MethodCall n2 . n3 ( n4 )\r\n\r\n// if terminal\r\nn6 = LoadLocal 'cond'\r\nn7 = If test=n6 consequent=n5 alternate=(not pictured)\r\n\r\n// return terminal\r\nn8 = LoadLocal 'array';\r\nn9 = Return value=n8\r\n\r\nexit=n9\r\n```\r\n\r\nNote that even if there are multiple returns, there will always be a single \"exit\" node, which is just the node corresponding to the last statement of the outer block in the original program.\r\n\r\nConverting back to HIR is a bit tricky, but shouldn’t be too bad. For all the nodes that correspond to a given block scope we can just emit the nodes to HIR in order, since they’re already in reverse post order. The catch is that nodes for inner block scopes are also mixed in and have to be emitted at the right point. I need to experiment with this more. \r\n\r\nWhat's implemented so far is very basic translation of HIR to ReactiveGraph. The only dependencies created are direct data dependencies and basic control flow, which means that e.g. code inside an if consequent will stay \"inside\" that consequent, but it's possible for mutations or reassignments to get reordered. The reordering happens because we reverse-postorder the graph after construction, which automatically orders strictly based on dependencies and moves things around otherwise.\r\n\r\nThere is lots left to do here, including cleaning up the node dependencies and how they map to local Places, establishing other forms of dependencies, etc.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31974/reactions",
      total_count: 1,
      "+1": 1,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31974/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31972",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31972/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31972/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31972/events",
    html_url: "https://github.com/facebook/react/pull/31972",
    id: 2768170370,
    node_id: "PR_kwDOAJy2Ks6GsZx1",
    number: 31972,
    title: "[fb][react-dom] remove render/unmount from ReactDOMRootFB",
    user: {
      login: "kassens",
      id: 11849,
      node_id: "MDQ6VXNlcjExODQ5",
      avatar_url: "https://avatars.githubusercontent.com/u/11849?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/kassens",
      html_url: "https://github.com/kassens",
      followers_url: "https://api.github.com/users/kassens/followers",
      following_url:
        "https://api.github.com/users/kassens/following{/other_user}",
      gists_url: "https://api.github.com/users/kassens/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/kassens/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/kassens/subscriptions",
      organizations_url: "https://api.github.com/users/kassens/orgs",
      repos_url: "https://api.github.com/users/kassens/repos",
      events_url: "https://api.github.com/users/kassens/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/kassens/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 2,
    created_at: "2025-01-03T21:02:26Z",
    updated_at: "2025-01-03T21:38:07Z",
    closed_at: null,
    author_association: "MEMBER",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31972",
      html_url: "https://github.com/facebook/react/pull/31972",
      diff_url: "https://github.com/facebook/react/pull/31972.diff",
      patch_url: "https://github.com/facebook/react/pull/31972.patch",
      merged_at: null,
    },
    body: null,
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31972/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31972/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31970",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31970/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31970/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31970/events",
    html_url: "https://github.com/facebook/react/pull/31970",
    id: 2768104530,
    node_id: "PR_kwDOAJy2Ks6GsLeN",
    number: 31970,
    title: "[Dom] Fixed Before Input Event Bug",
    user: {
      login: "HitenChawda46",
      id: 40900021,
      node_id: "MDQ6VXNlcjQwOTAwMDIx",
      avatar_url: "https://avatars.githubusercontent.com/u/40900021?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/HitenChawda46",
      html_url: "https://github.com/HitenChawda46",
      followers_url: "https://api.github.com/users/HitenChawda46/followers",
      following_url:
        "https://api.github.com/users/HitenChawda46/following{/other_user}",
      gists_url: "https://api.github.com/users/HitenChawda46/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/HitenChawda46/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/HitenChawda46/subscriptions",
      organizations_url: "https://api.github.com/users/HitenChawda46/orgs",
      repos_url: "https://api.github.com/users/HitenChawda46/repos",
      events_url: "https://api.github.com/users/HitenChawda46/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/HitenChawda46/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2025-01-03T20:02:26Z",
    updated_at: "2025-01-05T15:15:32Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31970",
      html_url: "https://github.com/facebook/react/pull/31970",
      diff_url: "https://github.com/facebook/react/pull/31970.diff",
      patch_url: "https://github.com/facebook/react/pull/31970.patch",
      merged_at: null,
    },
    body: "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn test --debug --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nThis PR fixes https://github.com/facebook/react/issues/24358\r\nRegistered onBeforeInput event with the dependency of including ***beforeinput*** instead of ***textInput***, as ***beforeinput*** is an available native event, and ensured that ***beforeinput***  event is properly handled by dispatchQueue architecture flow\r\n\r\n## How did you test this change?\r\n\r\nRan test script and Manual Dev testing, and updated ***BeforeInputEventPlugin-test.js*** to ensure all tests are passing and covered\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31970/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31970/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31969",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31969/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31969/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31969/events",
    html_url: "https://github.com/facebook/react/pull/31969",
    id: 2768009481,
    node_id: "PR_kwDOAJy2Ks6Gr26s",
    number: 31969,
    title: "[ESLint] exhaustive-deps rule to also check `useInsertionEffect`",
    user: {
      login: "glyph-cat",
      id: 32414645,
      node_id: "MDQ6VXNlcjMyNDE0NjQ1",
      avatar_url: "https://avatars.githubusercontent.com/u/32414645?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/glyph-cat",
      html_url: "https://github.com/glyph-cat",
      followers_url: "https://api.github.com/users/glyph-cat/followers",
      following_url:
        "https://api.github.com/users/glyph-cat/following{/other_user}",
      gists_url: "https://api.github.com/users/glyph-cat/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/glyph-cat/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/glyph-cat/subscriptions",
      organizations_url: "https://api.github.com/users/glyph-cat/orgs",
      repos_url: "https://api.github.com/users/glyph-cat/repos",
      events_url: "https://api.github.com/users/glyph-cat/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/glyph-cat/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2025-01-03T18:39:44Z",
    updated_at: "2025-01-03T18:57:41Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31969",
      html_url: "https://github.com/facebook/react/pull/31969",
      diff_url: "https://github.com/facebook/react/pull/31969.diff",
      patch_url: "https://github.com/facebook/react/pull/31969.patch",
      merged_at: null,
    },
    body: "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn test --debug --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n* Updated the `eslint-plugin-react-hooks` package so that the `exhaustive-deps` rule would also check `useInsertionEffect`.\r\n  <img width=\"708\" alt=\"Screenshot of ESLint reporting violation of exhaustive deps rule when using use insertion effect\" src=\"https://github.com/user-attachments/assets/d06b52c5-f8e2-4a0d-b797-d0d2fd134262\" />\r\n* This could be achieved by specifying `'useInsertionEffect'` as an additional hook in the ESLint config file, but considering that this is a built-in hook, it would make more sense for `eslint-plugin-react-hooks` to handle this out of the box.\r\n  ```js\r\n  'react-hooks/exhaustive-deps': ['warn', {\r\n    additionalHooks: 'useInsertionEffect',\r\n  }],\r\n  ```\r\n* Related issue: #31308\r\n\r\n## How did you test this change?\r\n\r\n* Tests in `ESLintRuleExhaustiveDeps-test.js` have been updated to also test this change.\r\n* The changes made are referenced from existing tests for `useLayoutEffect`.\r\n\r\nPlease let me know if any scenario is not covered or if my changes to the test are inappropriate as I might have misunderstood the purpose of the existing tests that I was referencing to.\r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31969/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31969/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31968",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31968/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31968/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31968/events",
    html_url: "https://github.com/facebook/react/pull/31968",
    id: 2767687308,
    node_id: "PR_kwDOAJy2Ks6GqwRB",
    number: 31968,
    title:
      "[DevTools]  feat[Tree]: set initial scroll offset when inspected element index is set",
    user: {
      login: "hoxyq",
      id: 28902667,
      node_id: "MDQ6VXNlcjI4OTAyNjY3",
      avatar_url: "https://avatars.githubusercontent.com/u/28902667?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/hoxyq",
      html_url: "https://github.com/hoxyq",
      followers_url: "https://api.github.com/users/hoxyq/followers",
      following_url:
        "https://api.github.com/users/hoxyq/following{/other_user}",
      gists_url: "https://api.github.com/users/hoxyq/gists{/gist_id}",
      starred_url: "https://api.github.com/users/hoxyq/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/hoxyq/subscriptions",
      organizations_url: "https://api.github.com/users/hoxyq/orgs",
      repos_url: "https://api.github.com/users/hoxyq/repos",
      events_url: "https://api.github.com/users/hoxyq/events{/privacy}",
      received_events_url: "https://api.github.com/users/hoxyq/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2025-01-03T14:40:22Z",
    updated_at: "2025-01-07T14:05:47Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31968",
      html_url: "https://github.com/facebook/react/pull/31968",
      diff_url: "https://github.com/facebook/react/pull/31968.diff",
      patch_url: "https://github.com/facebook/react/pull/31968.patch",
      merged_at: null,
    },
    body: "Stacked on https://github.com/facebook/react/pull/31956. See [commit on top](https://github.com/facebook/react/pull/31968/commits/ecb8df4175342cde7669cd4a6b008b3782eb5b61).\r\n\r\nUse `initialScrollOffset` prop for `FixedSizeList` from `react-window`. This happens when user selects an element in built-in Elements panel in DevTools, and then opens Components panel from React DevTools - elements will be synced and corresponding React Element will be pre-selected, we just have to scroll to its position now. ",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31968/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31968/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31960",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31960/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31960/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31960/events",
    html_url: "https://github.com/facebook/react/pull/31960",
    id: 2766577520,
    node_id: "PR_kwDOAJy2Ks6Gm-P6",
    number: 31960,
    title: "[compiler] validation against calling impure functions",
    user: {
      login: "josephsavona",
      id: 6425824,
      node_id: "MDQ6VXNlcjY0MjU4MjQ=",
      avatar_url: "https://avatars.githubusercontent.com/u/6425824?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/josephsavona",
      html_url: "https://github.com/josephsavona",
      followers_url: "https://api.github.com/users/josephsavona/followers",
      following_url:
        "https://api.github.com/users/josephsavona/following{/other_user}",
      gists_url: "https://api.github.com/users/josephsavona/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/josephsavona/subscriptions",
      organizations_url: "https://api.github.com/users/josephsavona/orgs",
      repos_url: "https://api.github.com/users/josephsavona/repos",
      events_url: "https://api.github.com/users/josephsavona/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/josephsavona/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 3,
    created_at: "2025-01-02T20:08:43Z",
    updated_at: "2025-01-03T14:35:36Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31960",
      html_url: "https://github.com/facebook/react/pull/31960",
      diff_url: "https://github.com/facebook/react/pull/31960.diff",
      patch_url: "https://github.com/facebook/react/pull/31960.patch",
      merged_at: null,
    },
    body: "For now we just reject all calls of impure functions, and the validation is off by default. Going forward we can make this more precise and only reject impure functions called during render.\r\n\r\nNote that I was intentionally imprecise in the return type of these functions in order to avoid changing output of existing code. We lie to the compiler and say that Date.now, performance.now, and Math.random return unknown mutable objects rather than primitives. Once the validation is complete and vetted we can switch this to be more precise.\r\n\r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31960/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31960/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31959",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31959/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31959/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31959/events",
    html_url: "https://github.com/facebook/react/pull/31959",
    id: 2766526067,
    node_id: "PR_kwDOAJy2Ks6GmzFG",
    number: 31959,
    title: "[compiler] Fix for consecutive DCE'd branches with phis",
    user: {
      login: "josephsavona",
      id: 6425824,
      node_id: "MDQ6VXNlcjY0MjU4MjQ=",
      avatar_url: "https://avatars.githubusercontent.com/u/6425824?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/josephsavona",
      html_url: "https://github.com/josephsavona",
      followers_url: "https://api.github.com/users/josephsavona/followers",
      following_url:
        "https://api.github.com/users/josephsavona/following{/other_user}",
      gists_url: "https://api.github.com/users/josephsavona/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/josephsavona/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/josephsavona/subscriptions",
      organizations_url: "https://api.github.com/users/josephsavona/orgs",
      repos_url: "https://api.github.com/users/josephsavona/repos",
      events_url: "https://api.github.com/users/josephsavona/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/josephsavona/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 2,
    created_at: "2025-01-02T19:22:56Z",
    updated_at: "2025-01-02T19:24:22Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31959",
      html_url: "https://github.com/facebook/react/pull/31959",
      diff_url: "https://github.com/facebook/react/pull/31959.diff",
      patch_url: "https://github.com/facebook/react/pull/31959.patch",
      merged_at: null,
    },
    body: "This is an optimized version of @asmjmp0's fix in https://github.com/facebook/react/pull/31940. When we merge consecutive blocks we need to take care to rewrite later phis whose operands will now be different blocks due to merging. Rather than iterate all the blocks on each merge as in #31940, we can do a single iteration over all the phis at the end to fix them up.\r\n\r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31959/reactions",
      total_count: 1,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 1,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31959/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31956",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31956/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31956/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31956/events",
    html_url: "https://github.com/facebook/react/pull/31956",
    id: 2766322587,
    node_id: "PR_kwDOAJy2Ks6GmG04",
    number: 31956,
    title: "DevTools: merge element fields in TreeStateContext",
    user: {
      login: "hoxyq",
      id: 28902667,
      node_id: "MDQ6VXNlcjI4OTAyNjY3",
      avatar_url: "https://avatars.githubusercontent.com/u/28902667?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/hoxyq",
      html_url: "https://github.com/hoxyq",
      followers_url: "https://api.github.com/users/hoxyq/followers",
      following_url:
        "https://api.github.com/users/hoxyq/following{/other_user}",
      gists_url: "https://api.github.com/users/hoxyq/gists{/gist_id}",
      starred_url: "https://api.github.com/users/hoxyq/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/hoxyq/subscriptions",
      organizations_url: "https://api.github.com/users/hoxyq/orgs",
      repos_url: "https://api.github.com/users/hoxyq/repos",
      events_url: "https://api.github.com/users/hoxyq/events{/privacy}",
      received_events_url: "https://api.github.com/users/hoxyq/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2025-01-02T16:37:53Z",
    updated_at: "2025-01-07T14:00:37Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31956",
      html_url: "https://github.com/facebook/react/pull/31956",
      diff_url: "https://github.com/facebook/react/pull/31956.diff",
      patch_url: "https://github.com/facebook/react/pull/31956.patch",
      merged_at: null,
    },
    body: "Stacked on https://github.com/facebook/react/pull/31892, see commit on top.\r\n\r\nFor some reason, there were 2 fields different fields for essentially same thing: `selectedElementID` and `inspectedElementID`. Basically, the change is:\r\n```\r\nselectedElementID -> inspectedElementID\r\nselectedElementIndex -> inspectedElementIndex\r\n```\r\n\r\nI have a theory that it was due to previously used async approach around element inspection, and the whole `InspectedElementView` was wrapped in `Suspense`. \r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31956/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31956/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31953",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31953/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31953/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31953/events",
    html_url: "https://github.com/facebook/react/pull/31953",
    id: 2766156450,
    node_id: "PR_kwDOAJy2Ks6GljcY",
    number: 31953,
    title: "DevTools: add React 19 to DevTools test matrix",
    user: {
      login: "hoxyq",
      id: 28902667,
      node_id: "MDQ6VXNlcjI4OTAyNjY3",
      avatar_url: "https://avatars.githubusercontent.com/u/28902667?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/hoxyq",
      html_url: "https://github.com/hoxyq",
      followers_url: "https://api.github.com/users/hoxyq/followers",
      following_url:
        "https://api.github.com/users/hoxyq/following{/other_user}",
      gists_url: "https://api.github.com/users/hoxyq/gists{/gist_id}",
      starred_url: "https://api.github.com/users/hoxyq/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/hoxyq/subscriptions",
      organizations_url: "https://api.github.com/users/hoxyq/orgs",
      repos_url: "https://api.github.com/users/hoxyq/repos",
      events_url: "https://api.github.com/users/hoxyq/events{/privacy}",
      received_events_url: "https://api.github.com/users/hoxyq/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 196858374,
        node_id: "MDU6TGFiZWwxOTY4NTgzNzQ=",
        url: "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        name: "CLA Signed",
        color: "e7e7e7",
        default: false,
        description: null,
      },
      {
        id: 1775958285,
        node_id: "MDU6TGFiZWwxNzc1OTU4Mjg1",
        url: "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        name: "React Core Team",
        color: "9149d1",
        default: false,
        description: "Opened by a member of the React Core Team",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 2,
    created_at: "2025-01-02T14:48:27Z",
    updated_at: "2025-01-02T14:51:53Z",
    closed_at: null,
    author_association: "CONTRIBUTOR",
    active_lock_reason: null,
    draft: true,
    pull_request: {
      url: "https://api.github.com/repos/facebook/react/pulls/31953",
      html_url: "https://github.com/facebook/react/pull/31953",
      diff_url: "https://github.com/facebook/react/pull/31953.diff",
      patch_url: "https://github.com/facebook/react/pull/31953.patch",
      merged_at: null,
    },
    body: "Work in progress. The only failing test is this: https://github.com/facebook/react/blob/a06cd9e1d141f598a68377495f4c0fe9ee44e569/packages/react-devtools-shared/src/__tests__/inspectedElement-test.js#L3147\r\n\r\nThis is because we are using `unstable_getCacheForType` for element inspection on React DevTools side, which is unavailable in public versions of React.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31953/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31953/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31951",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31951/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31951/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31951/events",
    html_url: "https://github.com/facebook/react/issues/31951",
    id: 2765448583,
    node_id: "I_kwDOAJy2Ks6k1WWH",
    number: 31951,
    title: "Bug: Wrong address for empty string message",
    user: {
      login: "Nefcanto",
      id: 12782347,
      node_id: "MDQ6VXNlcjEyNzgyMzQ3",
      avatar_url: "https://avatars.githubusercontent.com/u/12782347?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/Nefcanto",
      html_url: "https://github.com/Nefcanto",
      followers_url: "https://api.github.com/users/Nefcanto/followers",
      following_url:
        "https://api.github.com/users/Nefcanto/following{/other_user}",
      gists_url: "https://api.github.com/users/Nefcanto/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/Nefcanto/starred{/owner}{/repo}",
      subscriptions_url: "https://api.github.com/users/Nefcanto/subscriptions",
      organizations_url: "https://api.github.com/users/Nefcanto/orgs",
      repos_url: "https://api.github.com/users/Nefcanto/repos",
      events_url: "https://api.github.com/users/Nefcanto/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/Nefcanto/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 155984160,
        node_id: "MDU6TGFiZWwxNTU5ODQxNjA=",
        url: "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        name: "Status: Unconfirmed",
        color: "d4c5f9",
        default: false,
        description: "A potential issue that we haven't yet confirmed as a bug",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 4,
    created_at: "2025-01-02T05:04:05Z",
    updated_at: "2025-01-02T18:36:47Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: '### Steps to reproduce\r\n\r\nI don\'t know where the problem could be. Therefore I can\'t create an MRE.\r\nThis is a video I captured:\r\n\r\nhttps://github.com/user-attachments/assets/1c21e144-2ccc-4fce-84af-2af15b8fe0b8\r\n\r\nThe point is, the message complaints that:\r\n\r\n> An empty string ("") was passed to the src attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to src instead of an empty string.\r\n\r\nWhen I open that message to see the stack, it guides me to a component of mine called `ToggleView` and the line specified contains this code:\r\n\r\n    setViewStyle("cards")\r\n\r\nAnd the `ToggleView.jsx` does not contain `src` attribute at all in it. Of course, I have `src` in many other places. But how can I know which one is causing the problem? The address is wrong.\r\n\r\n### Current behavior\r\n\r\nReact provides misleading addresses that do not help at all in finding the problem, and litters the console for long time until we find the problem accidentally or through heuristics (trial & error).\r\n\r\n### Expected behavior\r\n\r\nReact should provide accurate addresses.\r\n\r\n### Your environment\r\n\r\n```\r\n  System:\r\n    OS: Linux 6.8 Debian GNU/Linux 12 (bookworm) 12 (bookworm)\r\n  Binaries:\r\n    Node: 22.12.0 - /usr/local/bin/node\r\n    npm: 11.0.0 - /usr/local/bin/npm\r\n  Browsers:\r\n    Firefox: 133.0.3 (64-bit)\r\n  npmPackages:\r\n    react: ^19.0.0 => 19.0.0 \r\n    react-dom: ^19.0.0 => 19.0.0 \r\n\r\n```\r\n',
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31951/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31951/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31950",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31950/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31950/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31950/events",
    html_url: "https://github.com/facebook/react/issues/31950",
    id: 2765146034,
    node_id: "I_kwDOAJy2Ks6k0Mey",
    number: 31950,
    title:
      '[DevTools Bug] Cannot remove node "92" because no matching node was found in the Store.',
    user: {
      login: "TheOnly1TY",
      id: 192823268,
      node_id: "U_kgDOC34_5A",
      avatar_url: "https://avatars.githubusercontent.com/u/192823268?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/TheOnly1TY",
      html_url: "https://github.com/TheOnly1TY",
      followers_url: "https://api.github.com/users/TheOnly1TY/followers",
      following_url:
        "https://api.github.com/users/TheOnly1TY/following{/other_user}",
      gists_url: "https://api.github.com/users/TheOnly1TY/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/TheOnly1TY/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/TheOnly1TY/subscriptions",
      organizations_url: "https://api.github.com/users/TheOnly1TY/orgs",
      repos_url: "https://api.github.com/users/TheOnly1TY/repos",
      events_url: "https://api.github.com/users/TheOnly1TY/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/TheOnly1TY/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 40929151,
        node_id: "MDU6TGFiZWw0MDkyOTE1MQ==",
        url: "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        name: "Type: Bug",
        color: "b60205",
        default: false,
        description: null,
      },
      {
        id: 155984160,
        node_id: "MDU6TGFiZWwxNTU5ODQxNjA=",
        url: "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        name: "Status: Unconfirmed",
        color: "d4c5f9",
        default: false,
        description: "A potential issue that we haven't yet confirmed as a bug",
      },
      {
        id: 710573595,
        node_id: "MDU6TGFiZWw3MTA1NzM1OTU=",
        url: "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
        name: "Component: Developer Tools",
        color: "fbca04",
        default: false,
        description: null,
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 3,
    created_at: "2025-01-01T16:10:15Z",
    updated_at: "2025-01-08T08:10:38Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: '### Website or app\n\nhttp://localhost:3000/\n\n### Repro steps\n\nI was trying to inspect my component tree via react dev tools, but each time I make an interaction on the website which changes the state, it throws an error \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n6.0.1-c7c68ef842\n\n### Error message (automated)\n\nCannot remove node "92" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1173889\r\n    at v.emit (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1140783)\r\n    at chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1142390\r\n    at bridgeListener (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1552662)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:"Component: Developer Tools" repo:facebook/react\n```\n',
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31950/reactions",
      total_count: 2,
      "+1": 2,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31950/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31949",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31949/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31949/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31949/events",
    html_url: "https://github.com/facebook/react/issues/31949",
    id: 2765141793,
    node_id: "I_kwDOAJy2Ks6k0Lch",
    number: 31949,
    title: "[React 19] Internal secrets causing issue with SSR in dev mode",
    user: {
      login: "LevineLighto",
      id: 53975672,
      node_id: "MDQ6VXNlcjUzOTc1Njcy",
      avatar_url: "https://avatars.githubusercontent.com/u/53975672?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/LevineLighto",
      html_url: "https://github.com/LevineLighto",
      followers_url: "https://api.github.com/users/LevineLighto/followers",
      following_url:
        "https://api.github.com/users/LevineLighto/following{/other_user}",
      gists_url: "https://api.github.com/users/LevineLighto/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/LevineLighto/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/LevineLighto/subscriptions",
      organizations_url: "https://api.github.com/users/LevineLighto/orgs",
      repos_url: "https://api.github.com/users/LevineLighto/repos",
      events_url: "https://api.github.com/users/LevineLighto/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/LevineLighto/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 1983406161,
        node_id: "MDU6TGFiZWwxOTgzNDA2MTYx",
        url: "https://api.github.com/repos/facebook/react/labels/Resolution:%20Expected%20Behavior",
        name: "Resolution: Expected Behavior",
        color: "8c98d8",
        default: false,
        description: "",
      },
      {
        id: 6688277426,
        node_id: "LA_kwDOAJy2Ks8AAAABjqcDsg",
        url: "https://api.github.com/repos/facebook/react/labels/React%2019",
        name: "React 19",
        color: "263258",
        default: false,
        description: "",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: "2025-01-01T16:00:44Z",
    updated_at: "2025-01-06T19:55:35Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: "In React 19, the internal secret variable was renamed to `_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE`. \r\nMy first question is, why does it need to be prefixed with `__CLIENT_INTERNALS` and `__SERVER_INTERNALS`? \r\nThis causes an issue with my precompiled component library. I don't give those components `\"use client\"` directive because it's an icon library that doesn't need any hook. So, NextJS rendered them on server and this happened\r\n![image](https://github.com/user-attachments/assets/07ca17b1-0d38-4442-b319-78bf4265cc10)\r\n\r\nI inspected the code of my icon library and found this\r\n```js\r\nimport y3 from \"react\";\r\n...\r\n/**\r\n * @license React\r\n * react-jsx-runtime.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n...\r\n    function O() {\r\n      var e = v.A;\r\n      return e === null ? null : e.getOwner();\r\n    }\r\n...\r\n    var f3 = y3, ... v = f3.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, ...\r\n...\r\n```\r\n\r\nI noticed the internal secret is named `__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE` on server.\r\n![server internals](https://github.com/user-attachments/assets/27a28cad-e35d-4a6a-b5f6-a03c5a6d1f20)\r\n\r\nThe error was solved when I manually changed the code.\r\n```js\r\n...\r\n    var f3 = y3, ... v = f3.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, ...\r\n...\r\n```\r\n\r\nMy last question, is there any way to make the compiled code to use server secret if the client secret is not available and vice-versa? I don't want to manually edit the code after compiling them whenever I add new icons in future\r\n\r\nThank you!\r\n\r\nPS. The error only happens when I run `npm run dev`.",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31949/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31949/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31944",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31944/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31944/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31944/events",
    html_url: "https://github.com/facebook/react/issues/31944",
    id: 2764092538,
    node_id: "I_kwDOAJy2Ks6kwLR6",
    number: 31944,
    title:
      "[React 19] Bug: optimisticState is updated with both new state and optimisticValue in useOptimistic",
    user: {
      login: "vedanttikku12",
      id: 6966618,
      node_id: "MDQ6VXNlcjY5NjY2MTg=",
      avatar_url: "https://avatars.githubusercontent.com/u/6966618?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/vedanttikku12",
      html_url: "https://github.com/vedanttikku12",
      followers_url: "https://api.github.com/users/vedanttikku12/followers",
      following_url:
        "https://api.github.com/users/vedanttikku12/following{/other_user}",
      gists_url: "https://api.github.com/users/vedanttikku12/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/vedanttikku12/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/vedanttikku12/subscriptions",
      organizations_url: "https://api.github.com/users/vedanttikku12/orgs",
      repos_url: "https://api.github.com/users/vedanttikku12/repos",
      events_url: "https://api.github.com/users/vedanttikku12/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/vedanttikku12/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 6688277426,
        node_id: "LA_kwDOAJy2Ks8AAAABjqcDsg",
        url: "https://api.github.com/repos/facebook/react/labels/React%2019",
        name: "React 19",
        color: "263258",
        default: false,
        description: "",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 4,
    created_at: "2024-12-31T08:12:52Z",
    updated_at: "2025-01-07T12:04:27Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: 'Using the react Example given for useOptimistic hook in docs, an update in state passed to the hook should directly reset the optimisticState in one render.\r\n\r\nInstead\r\n1. It calls the updaterFn first, updates the optimisticState using new state and optimisticValue during one render cycle\r\nresets optimisticState with new State in another render cycle.\r\n2. As a result, both the new state and optimisticValue is rendered. Tried this in 20x slowdown\r\n\r\nhttps://github.com/user-attachments/assets/6abfdd9a-c2ea-4776-8df4-48ce2e3eb41d\r\n\r\n\r\n**React version**: 19\r\n\r\n**Steps To Reproduce**\r\n\r\n1. Throttle CPU to 20x slowdown\r\n2. Type some input in text box and press submit\r\n3. See that the optimistic state is displayed and then it is pushed down for an instant along with the new state\r\n4. Check console logs\r\n\r\n<img width="1728" alt="Screen Shot 2024-12-31 at 1 42 21 PM" src="https://github.com/user-attachments/assets/10c655e8-154c-4813-9f68-eb78e4e1e57e" />\r\n\r\n**Link to code example:**\r\n\r\nhttps://codesandbox.io/p/sandbox/react-dev-forked-gmlxnr?file=%2Fsrc%2FApp.js&workspaceId=ws_QiCvK4c476hege6EDsXfpC\r\n\r\n**The current behavior**\r\n\r\nWhen new state is passed to useOptimistic,\r\n\r\n1. It updates optimisticState by calling updaterFn with new state and optimisticValue\r\n2. Component is rendered using this optimisticState (incorrect one)\r\n3. Another update to optimisticState is done by resetting it to the new state\r\n4. Component is rendered using this new optimisticState (correct one)\r\n\r\n\r\n**The expected behavior**\r\n\r\nWhen new state is passed to useOptimistic, it should directly reset the optimisticState without calling the updater Fn',
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31944/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31944/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31932",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31932/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31932/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31932/events",
    html_url: "https://github.com/facebook/react/issues/31932",
    id: 2762139102,
    node_id: "I_kwDOAJy2Ks6kouXe",
    number: 31932,
    title:
      "[Compiler]: React Compiler should error on document.getElementById call during render",
    user: {
      login: "rishitells",
      id: 20553866,
      node_id: "MDQ6VXNlcjIwNTUzODY2",
      avatar_url: "https://avatars.githubusercontent.com/u/20553866?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/rishitells",
      html_url: "https://github.com/rishitells",
      followers_url: "https://api.github.com/users/rishitells/followers",
      following_url:
        "https://api.github.com/users/rishitells/following{/other_user}",
      gists_url: "https://api.github.com/users/rishitells/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/rishitells/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/rishitells/subscriptions",
      organizations_url: "https://api.github.com/users/rishitells/orgs",
      repos_url: "https://api.github.com/users/rishitells/repos",
      events_url: "https://api.github.com/users/rishitells/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/rishitells/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 180616330,
        node_id: "MDU6TGFiZWwxODA2MTYzMzA=",
        url: "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        name: "Component: Optimizing Compiler",
        color: "bfdadc",
        default: false,
        description: null,
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 3,
    created_at: "2024-12-29T07:20:54Z",
    updated_at: "2025-01-02T20:09:43Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: '### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEAIngIYA2EA5gOp44AWAChDDlQBTBF5gB5AA4JiAXwCURYAB1iROITA4FhTnkwIYRALxEcATxEQ0RACYQ4UALaiVAQh16ZILGYRoNCMy6IB+c0sbOwA6GgQcAFFKBFtMHAAhAwBJMy4AciF2TkoAWhgICBx0qWQiTChKSgBuOSIiGAjYYi46+qIAHjIqWiIIEUwdYH5hUTEAPjb2zu7qGhC2DipVePIvGCHFVfWJqemZijmQgGE1O3GACQQqiA6AelnaE7P4yflp+8f5xZy3j4fDrQ-kQJLVMGIQGIgA\r\n\r\n### Repro steps\r\n\r\n**Steps to reproduce**\r\n1. Create a simple dialog component that uses Portal with a dynamic container:\r\n```jsx\r\nfunction DialogWithPortal({ isOpen }) {\r\n  const container = typeof document !== "undefined" ? document.getElementById(\'portal-root\') : null;\r\n  return (\r\n    <Dialog open={isOpen}>\r\n      <Dialog.Portal container={container}>\r\n        <Dialog.Content>Hello</Dialog.Content>\r\n      </Dialog.Portal>\r\n    </Dialog>\r\n  );\r\n}\r\n```\r\n2. Mount the component when portal container exists in DOM:\r\n```jsx\r\n// DOM has: <div id="portal-root"></div>\r\n<DialogWithPortal isOpen={true} />\r\n``` \r\n3. Observe that dialog doesn\'t open because compiler memoizes initial null container value\r\n\r\n**Expected behavior:**\r\n- document.getElementById() should be evaluated on each render to find the portal container\r\n\r\n**Actual behaviour:**\r\n- Compiler memoizes the initial document.getElementById() call\r\n- If container doesn\'t exist on first render, null is cached permanently\r\n- Subsequent renders use cached null value even after container is added to DOM\r\n\r\n**The issue is in how the compiler transforms the code:**\r\n```jsx\r\n// Initial DOM query is memoized and never rechecked\r\n  let t1;\r\n  if ($[0] === Symbol.for("react.memo_cache_sentinel")) {\r\n    t1 =\r\n      typeof document !== "undefined"\r\n        ? document.getElementById("portal-root")\r\n        : null;\r\n    $[0] = t1;\r\n  } else {\r\n    t1 = $[0];\r\n  }\r\n  const container = t1;\r\n```\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n^18.2.0\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-201e55d-20241215',
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31932/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31932/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: "https://api.github.com/repos/facebook/react/issues/31929",
    repository_url: "https://api.github.com/repos/facebook/react",
    labels_url:
      "https://api.github.com/repos/facebook/react/issues/31929/labels{/name}",
    comments_url:
      "https://api.github.com/repos/facebook/react/issues/31929/comments",
    events_url:
      "https://api.github.com/repos/facebook/react/issues/31929/events",
    html_url: "https://github.com/facebook/react/issues/31929",
    id: 2761408753,
    node_id: "I_kwDOAJy2Ks6kl8Dx",
    number: 31929,
    title: "Bug: Chrome dev tools memory leak heads up",
    user: {
      login: "faridsaid20",
      id: 119894088,
      node_id: "U_kgDOByVwSA",
      avatar_url: "https://avatars.githubusercontent.com/u/119894088?v=4",
      gravatar_id: "",
      url: "https://api.github.com/users/faridsaid20",
      html_url: "https://github.com/faridsaid20",
      followers_url: "https://api.github.com/users/faridsaid20/followers",
      following_url:
        "https://api.github.com/users/faridsaid20/following{/other_user}",
      gists_url: "https://api.github.com/users/faridsaid20/gists{/gist_id}",
      starred_url:
        "https://api.github.com/users/faridsaid20/starred{/owner}{/repo}",
      subscriptions_url:
        "https://api.github.com/users/faridsaid20/subscriptions",
      organizations_url: "https://api.github.com/users/faridsaid20/orgs",
      repos_url: "https://api.github.com/users/faridsaid20/repos",
      events_url: "https://api.github.com/users/faridsaid20/events{/privacy}",
      received_events_url:
        "https://api.github.com/users/faridsaid20/received_events",
      type: "User",
      user_view_type: "public",
      site_admin: false,
    },
    labels: [
      {
        id: 155984160,
        node_id: "MDU6TGFiZWwxNTU5ODQxNjA=",
        url: "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        name: "Status: Unconfirmed",
        color: "d4c5f9",
        default: false,
        description: "A potential issue that we haven't yet confirmed as a bug",
      },
    ],
    state: "open",
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: "2024-12-28T03:01:47Z",
    updated_at: "2024-12-28T03:04:09Z",
    closed_at: null,
    author_association: "NONE",
    active_lock_reason: null,
    body: "TLDR: There is a bug with Chrome dev tools that prevents nodes to be garbage collected ( detached nodes )\r\n\r\nI noticed a lot of detached nodes when navigating in my Vite react 18 app.\r\nThought it was something with react-router, but then tried with tanstack router and there was the same issue.\r\nLater I could reproduce the bug with raw react code. So I spent last few days deep diving into react source code until it lead to pure JavaScript events causing this...\r\n\r\nBy the end I figured out that it was chrome dev tools causing this, they start tracking on all events that won't allow garbage collection or something like that. And it is relatively new bug.\r\n  \r\nTested with chrome 83 and 104. No issues with detached nodes...\r\nNot sure which version of chrome introduced this. But beware memory leak bug reports that could come soon.\r\n\r\nHere is the video of the same code with chrome 104 (left) and chrome 131 (right)\r\n\r\n\r\nhttps://github.com/user-attachments/assets/926bb228-c9dc-4ccd-aa70-f34051cf64bb\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReact version: Tested with 16, 18 and 19\r\n\r\n## Steps To Reproduce\r\n1. Open codesandbox. There is a button called \"open in a new tab\", click it.\r\n![image](https://github.com/user-attachments/assets/f14a27e0-62c1-4e25-9479-4ff21f65ebcf)\r\n\r\n2. Open chrome dev tools.\r\n3. In the video I used performance monitor. But you can track memory leaks however you want in Memory tab.\r\n4. Each time you click on event button and then on render button it will fail to garbage collect previous nodes.\r\n\r\n### To make sure that it is chrome dev tools and not react.\r\n1. Open the same sandbox preview in new tab. Don't open dev tools yet.\r\n2. Start clicking on event and render buttons dozen times.\r\n3. Open dev tools and see that there are no detached nodes.\r\n\r\n\r\nLink to code example: https://codesandbox.io/p/sandbox/lingering-bash-lschws\r\n\r\n## The current behavior\r\nFails to garbage collect unused nodes\r\n\r\n## The expected behavior\r\nShould garbage collect\r\n",
    closed_by: null,
    reactions: {
      url: "https://api.github.com/repos/facebook/react/issues/31929/reactions",
      total_count: 0,
      "+1": 0,
      "-1": 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url:
      "https://api.github.com/repos/facebook/react/issues/31929/timeline",
    performed_via_github_app: null,
    state_reason: null,
  },
];
